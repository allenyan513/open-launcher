name: Deploy to EC2

on:
  push:
    branches:
      - master

env:
  REMOTE_PATH: /home/ec2-user/open-product-hunt
  API_ZIP_NAME: api.zip
  WEB_ZIP_NAME: web.zip

jobs:
  deploy-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.9.0'

      - name: Install pnpm
        run: npm install -g pnpm@latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile  --filter=api

      - name: Decrypt .env.production.gpg file
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" \
          --output .env .env.production.gpg
          set -a
          source .env
          set +a

      - name: Build API
        run: pnpm run --filter=api build

      - name: Prepare API zip
        run: zip -r ${{ env.API_ZIP_NAME }} apps/api -x "**/node_modules/*"

      - name: Upload to EC2 (API)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          source: ${{ env.API_ZIP_NAME }}
          target: ${{ env.REMOTE_PATH }}/api

      - name: SSH Unzip and Restart API
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script: |
            cd ${{ env.REMOTE_PATH }}/api
            unzip -o ${{ env.API_ZIP_NAME }} && rm -f ${{ env.API_ZIP_NAME }}
            corepack enable
            corepack prepare pnpm@latest --activate
            pnpm install --only production --frozen-lockfile
            pnpm run pm2:start-api  # 你需要定义这个命令

  deploy-web:
    runs-on: ubuntu-latest
    needs: deploy-api  # 等 API 部署完成后再部署 Web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.9.0'

      - name: Install pnpm
        run: npm install -g pnpm@latest

      - name: Decrypt .env.production.gpg file
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" \
          --output .env .env.production.gpg
          set -a
          source .env
          set +a

      - name: Install dependencies
        run: pnpm install --filter=web --frozen-lockfile

      - name: Build Web
        run: pnpm run --filter=web build

      - name: Prepare Web zip
        run: zip -r ${{ env.WEB_ZIP_NAME }} apps/web -x "**/node_modules/*"

      - name: Upload to EC2 (Web)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          source: ${{ env.WEB_ZIP_NAME }}
          target: ${{ env.REMOTE_PATH }}/web

      - name: SSH Unzip and Restart Web
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script: |
            cd ${{ env.REMOTE_PATH }}/web
            unzip -o ${{ env.WEB_ZIP_NAME }} && rm -f ${{ env.WEB_ZIP_NAME }}
            corepack enable
            corepack prepare pnpm@latest --activate
            pnpm install --only production --frozen-lockfile
            chmod +x apps/web/start.sh
            pnpm run pm2:start-web  # 你需要定义这个命令
